version: "3.8"
services:
  frontend:
    build:
      context: ./frontend
    container_name: "frontend"
    networks:
      - frontend
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx.conf
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "3000:80"
  
  database:
    image: postgres:14-alpine
    container_name: "database"
    user: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - "POSTGRES_NAME=postgres"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    networks:
      - backend

  backend:
    build:
      context: ./lib_catalog
    container_name: "backend"
    environment:
      - "POSTGRES_NAME=django"
      - "POSTGRES_USER=django"
      - "POSTGRES_PASSWORD=django"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge